1. CREATE DATABASE s290393;
2. CREATE SCHEMA firma;
3. CREATE ROLE ksiegowosc;
   GRANT SELECT ON ALL TABLES IN SCHEMA firma TO ksiegowosc;
4. Tworzenie tabel:
   a) CREATE TABLE pracownicy (id_pracownika SERIAL NOT NULL, imie VARCHAR(100) NOT NULL, nazwisko VARCHAR(150) NOT NULL, adres VARCHAR(250) NOT NULL, telefon VARCHAR(15) NOT NULL);
   b) CREATE TABLE godziny (id_godziny SERIAL NOT NULL, data DATE NOT NULL, liczba_godzin INT NOT NULL, id_pracownika INT NOT NULL);
   c) CREATE TABLE pensja_stanowisko(id_pensji SERIAL NOT NULL, stanowisko VARCHAR(255) NOT NULL, kwota FLOAT(2) NOT NULL);
   d) CREATE TABLE premia(id_premii SERIAL NOT NULL, rodzaj VARCHAR(255), kwota FLOAT(2) NOT NULL);
   e) CREATE TABLE wynagrodzenie(id_wynagrodzenia SERIAL NOT NULL, data DATE NOT NULL, id_pracownika INT NOT NULL, id_godziny INT NOT NULL, id_pensji INT NOT NULL, id_premii INT NOT NULL);
   
   Ustawianie kluczy glownych:
   a) ALTER TABLE pracownicy ADD PRIMARY KEY(id_pracownika);
   b) ALTER TABLE godziny ADD PRIMARY KEY(id_godziny);
   c) ALTER TABLE pensja_stanowisko ADD PRIMARY KEY(id_pensji);
   d) ALTER TABLE premia ADD PRIMARY KEY(id_premii);
   e) ALTER TABLE wynagrodzenie ADD PRIMARY KEY(id_wynagrodzenia);

   Dodawanie kluczy obcych:
   a) ALTER TABLE godziny ADD FOREIGN KEY(id_pracownika) REFERENCES pracownicy(id_pracownika);
   b) ALTER TABLE wynagrodzenie ADD FOREIGN KEY(id_pracownika) REFERENCES pracownicy(id_pracownika);
   c) ALTER TABLE wynagrodzenie ADD FOREIGN KEY(id_godziny) REFERENCES godziny(id_godziny);
   d) ALTER TABLE wynagrodzenie ADD FOREIGN KEY(id_pensji) REFERENCES pensja_stanowisko(id_pensji);
   e) ALTER TABLE wynagrodzenie ADD FOREIGN KEY(id_premii) REFERENCES premia(id_premii);

   Indeksowanie:
   a) CREATE INDEX godziny_liczba_godzin ON godziny (liczba_godzin DESC);
   b) CREATE INDEX pensja_stanowisko_kwota ON pensja_stanowisko (kwota DESC);
   c) CREATE INDEX premia_kwota ON premia (kwota DESC);

   Więzy integralności:
   a) ALTER TABLE pracownicy DISABLE TRIGGER ALL;
   b) ALTER TABLE godziny DISABLE TRIGGER ALL;
   c) ALTER TABLE wynagrodzenie DISABLE TRIGGER ALL; 
   d) ALTER TABLE pensja_stanowisko DISABLE TRIGGER ALL;
   e) ALTER TABLE premia DISABLE TRIGGER ALL;

   Komentarze:
   a) COMMENT ON TABLE pracownicy IS 'Tabela przechowuje podstawowe informacje o pracownikach';
   b) COMMENT ON TABLE godziny IS 'Tabela przechowuje liczbe godzin przepracowana przez pracownikow';
   c) COMMENT ON TABLE pensja_stanowisko IS 'Tabela przechowuje wynagrodzenia na poszczegolnych stanowiskach';
   d) COMMENT ON TABLE premia IS 'Tabela przechowuje kwote jak i rodzaj poszczegolnych premii';
   e) COMMENT ON TABLE wynagrodzenie IS 'Tabela przechowuje liczbe godzin przepracowanych oraz wynagrodzenia pracownikow wraz z wynagrodzeniem bazowym, premia';

5.
   Dodawanie pracownikow:
   1) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('John', 'Brian', 'Krakow ul Jozefa 2', '530-444-112');
   2) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('Arthur', 'Tyler', 'Krakow ul Staffa 12', '728-414-172');
   3) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('Kate', 'Trex', 'Warszawa ul Warszawska 5', '111-534-222');
   4) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('Paul', 'Smith', 'Warszawa ul Krakowska 7', '929-112-332');
   5) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('Alicia', 'Green', 'Gdansk ul Zielona 3', '622-192-353');
   6) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('Katherine', 'Black', 'Gdansk ul Czarna 18', '722-123-456');
   7) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('James', 'Bond', 'Gdansk ul Biala 3', '987-654-321');
   8) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('John', 'Purple', 'Gdansk ul Torunska 22' '555-666-777');
   9) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('Victor', 'Orange', 'Gdansk ul Pomaranczowa 5', '111-222-333');
   10) INSERT INTO pracownicy(imie, nazwisko, adres, telefon) VALUES('Adam', 'Pilkowski', 'Gdansk ul Czerwona 81', '444-555-666');

   Dodawanie godzin:
   Dodanie pola przechowujacego numer tygodnia i miesiac:
   a) ALTER TABLE godziny ADD numer_tygodnia INT NOT NULL;
   b) ALTER TABLE godziny ADD miesiac INT NOT NULL;
   
   Dodawanie rekordów:
   1) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-01-01',40,1,1,1);
   2) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-01-14',22,2,2,1);
   3) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-01-21',27,3,3,1);
   4) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-01-21',27,3,3,1);
   5) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-02-01',74,5,5,2);
   6) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-02-10',112,6,6,2);
   7) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-02-17',32,7,7,2);
   8) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-02-24',44,8,8,2);
   9) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-03-01',61,9,9,3);
   10) INSERT INTO godziny(data, liczba_godzin, id_pracownika, numer_tygodnia, miesiac) VALUES('2020-03-08',36,10,10,3);

   Dodawanie pensji:
   1) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko1',1111);
   2) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko2',2222);
   3) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko3',3333);
   4) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko4',4444);
   5) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko5',5555);
   6) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('operator',6666);
   7) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko7',7777);
   8) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko8',8888);
   9) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('kierownik',9999);
   10) INSERT INTO pensja_stanowisko(stanowisko,kwota) VALUES('Stanowisko10',10000);

   Dodawanie premii:
   1) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',1000);
   2) INSERT INTO premia(rodzaj,kwota) VALUES ('kierownik',2000);
   3) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',3000);
   4) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',4000);
   5) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',5000);
   6) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',6000);
   7) INSERT INTO premia(rodzaj,kwota) VALUES (NULL,7000);
   8) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',8000);
   9) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',9000);
   10) INSERT INTO premia(rodzaj,kwota) VALUES ('uznaniowa',10000);

   Dodawanie wynagrodzen:
  
   Zmiana pola data na tekstowy:
   Najpierw usuwam - ALTER TABLE wynagrodzenie DROP COLUMN data;
   I dodaje spowrotem: ALTER TABLE wynagrodzenie ADD COLUMN data VARCHAR(255);

   1) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(1,1,1,1,'2020-01-01');
   2) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(2,2,2,2,'2020-02-01');
   3) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(3,3,3,3,'2020-03-01');
   4) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(4,4,4,4,'2020-04-01');
   5) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(5,5,5,5,'2020-05-01');
   6) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(6,6,6,6,'2020-06-01');
   7) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(7,7,7,7,'2020-07-01');
   8) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(8,8,8,8,'2020-08-01');
   9) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(9,9,9,9,'2020-09-01');
   10) insert into wynagrodzenie(id_pracownika,id_godziny,id_pensji,id_premii,data) VALUES(10,10,10,10,'2020-10-01');

6.
   a) SELECT id_pracownika, nazwisko FROM pracownicy;
   b) SELECT pracownicy.id_pracownika, kwota FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE kwota > 1000;
   c) SELECT pracownicy.id_pracownika FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON wynagrodzenie.id_premii = premia.id_premii WHERE premia.rodzaj IS NULL AND pensja_stanowisko.kwota > 2000;
   d) SELECT * FROM pracownicy WHERE imie LIKE 'J%';
   e) SELECT * FROM pracownicy WHERE LOWER(nazwisko) LIKE '%n%' AND imie LIKE '%a';
   f) SELECT imie, nazwisko, liczba_godzin-160 FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN godziny ON godziny.id_godziny = wynagrodzenie.id_godziny WHERE liczba_godzin > 160;
   g) SELECT imie, nazwisko FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE kwota <= 3000 AND kwota >= 1500;
   h) SELECT imie, nazwisko FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN godziny ON godziny.id_godziny = wynagrodzenie.id_godziny JOIN premia ON premia.id_premii = wynagrodzenie.id_premii WHERE liczba_godzin > 160 AND rodzaj IS NULL;

7.
   a) SELECT imie, nazwisko, kwota FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji ORDER BY kwota;
   b) SELECT imie, nazwisko, pensja_stanowisko.kwota, premia.kwota FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji JOIN premia ON premia.id_premii = wynagrodzenie.id_premii ORDER BY pensja_stanowisko.kwota ASC, premia.kwota DESC;
   c) SELECT stanowisko, COUNT(pracownicy.id_pracownika) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji GROUP BY stanowisko;
   d) SELECT AVG(pensja_stanowisko.kwota), MIN(pensja_stanowisko.kwota), MAX(pensja_stanowisko.kwota) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji WHERE stanowisko = 'kierownik';
   e) SELECT SUM(kwota) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji;
   f) SELECT stanowisko, SUM(kwota) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji GROUP BY stanowisko;
   g) SELECT stanowisko, COUNT(pracownicy.id_pracownika) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji JOIN premia ON premia.id_premii = wynagrodzenie.id_premii WHERE rodzaj NOT NULL GROUP BY stanowisko;
   h) DELETE FROM pracownicy WHERE pracownicy.id_pracownika IN (SELECT pracownicy.id_pracownika FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji WHERE kwota < 1200);

8.
   a) UPDATE pracownicy SET telefon = CONCAT('+48', telefon);
   b) UPDATE pracownicy SET telefon = CONCAT(LEFT(telefon, 3), ' ', SUBSTRING(telefon, 4, 11));
   c) SELECT UPPER(nazwisko) FROM PRACOWNICY ORDER BY LENGTH(nazwisko) DESC LIMIT 1;
   d) SELECT MD5(CONCAT(pracownicy.id_pracownika, imie, nazwisko, adres, telefon, kwota)) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji;

9.
   SELECT CONCAT('Pracownik ', imie, ' ', nazwisko, ', w dniu ', godziny.data, ' otrzymal pensje calkowita na kwote ', (pensja_stanowisko.kwota + premia.kwota), ', gdzie wynagrodzenie zasadnicze wynosilo: ', pensja_stanowisko.kwota, ', premia:', premia.kwota, ', nadgodziny: ', (CASE WHEN godziny.liczba_godzin > 160 THEN 0 ELSE (160 - godziny.liczba_godzin) END)) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN godziny ON godziny.id_godziny = wynagrodzenie.id_godziny JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON premia.id_premii = wynagrodzenie.id_premii;